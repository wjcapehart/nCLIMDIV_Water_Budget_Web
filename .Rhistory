false     = period_2_string) )
temp_data$Period = as.factor(temp_data$Period)
# ridgeplot
ggplot(data = temp_data) +
aes(x    = tmax,
y    = fct_rev(month),
fill = Period) +
theme_bw() +
ggtitle(label    = "Daily Global Historical Climate Data",
subtitle = ncdc_ids$name) +
ylab(label = "Month") +
xlab(label = "Daily Temperature (Â°F)") +
scale_fill_manual(values=c("blue",
"red"))+
geom_density_ridges2(alpha = 0.25,
color = NA) +
geom_density_ridges2(mapping = aes(x    = tmin,
y    = fct_rev(month),
fill = Period),
alpha   = 0.25,
color   = NA)
print(ghcn_data)
write.csv(x    =  ghcn_data,
file = "./MyData.csv")
# Libraries
# Tidyverse resources
library(package = "tidyverse") # Multiple Tidyverse Resources
library(package = "lubridate") # Date-Time Control
library(package = "ggridges")  # Ridgeline plots with ggplot2
# NOAA Libraries
library(package = "rnoaa") # NCEI  Data Retrieval Package
# Use NCDC Datasets to gret available datasets
ncdc_datasets()$data
ncdc_locs_cats()$data
# Station List for Sydney, Australia
ncdc_ids = ncdc_stations(locationid = 'CITY:AS000010',
datasetid  = 'GHCND',
limit      = 1000)
ncdc_ids$data
# Station List for Pennington County, SD
ncdc_ids = ncdc_stations(locationid = 'FIPS:46103',
datasetid  = 'GHCND',
limit      = 1000)
ncdc_ids$data
# Station List for South Dakota
ncdc_ids = ncdc_stations(locationid = 'FIPS:46',
datasetid  = 'GHCND',
limit      = 1000)
ncdc_ids$data
# Station List for the Rapid Creek River Basin
ncdc_ids = ncdc_stations(locationid = 'HUC:10120110',
datasetid  = 'GHCND',
limit      = 1000)
ncdc_ids$data
daily_time_frame = tibble(date = seq(min(daily_gcnd_frame$date),
max(daily_gcnd_frame$date)))
daily_time_frame = tibble(date = seq(min(ghcn_data$date),
max(ghcn_data$date)))
min(ghcn_data$date)
daily_time_frame = tibble(date = seq.Date(min(ghcn_data$date),
max(ghcn_data$date)))
# create a date frame to set us up to accomodate missing data
daily_time_frame = tibble(date = seq.Date(min(ghcn_data$date),
max(ghcn_data$date), by = "1 day"))
daily_time_frame
daily_gcnd_frame
daily_gcnd_frame = left_join(daily_time_frame,daily_gcnd_frame, by="date")
daily_gcnd_frame = left_join(ghcn_data$tmin,
ghcn_data$tmax,
by = c("id", "date"))
# Libraries
# Tidyverse resources
library(package = "tidyverse") # Multiple Tidyverse Resources
library(package = "lubridate") # Date-Time Control
library(package = "ggridges")  # Ridgeline plots with ggplot2
# NOAA Libraries
library(package = "rnoaa") # NCEI  Data Retrieval Package
# Use NCDC Datasets to gret available datasets
ncdc_datasets()$data
ncdc_locs_cats()$data
# Station List for Sydney, Australia
ncdc_ids = ncdc_stations(locationid = 'CITY:AS000010',
datasetid  = 'GHCND',
limit      = 1000)
ncdc_ids$data
# Station List for Pennington County, SD
ncdc_ids = ncdc_stations(locationid = 'FIPS:46103',
datasetid  = 'GHCND',
limit      = 1000)
ncdc_ids$data
# Station List for South Dakota
ncdc_ids = ncdc_stations(locationid = 'FIPS:46',
datasetid  = 'GHCND',
limit      = 1000)
ncdc_ids$data
# Station List for the Rapid Creek River Basin
ncdc_ids = ncdc_stations(locationid = 'HUC:10120110',
datasetid  = 'GHCND',
limit      = 1000)
ncdc_ids$data
# Station List for the North Korea
ncdc_ids = ncdc_stations(locationid = 'FIPS:KN',
limit      = 1000)
ncdc_ids$data
# Station Details for Rapid City Airport , SD
stationid_for_ncdcstations = 'GHCND:USW00024090'
stationid_for_ghcn_pull    = 'USW00024090'
# Station Details for Corvalis Or (OSU)
stationid_for_ncdcstations = 'GHCND:USC00351862'
stationid_for_ghcn_pull    = 'USC00351862'
ncdc_ids = ncdc_stations(stationid = stationid_for_ncdcstations)
ncdc_ids = ncdc_ids$data
# Get Available Parameters for a given station from a specific dataset
ncdc_datatypes(datasetid = 'GHCND',
stationid = stationid_for_ncdcstations)$data
# Pull the Raw Climate Data from a Single Station
ghcn_data = ghcnd(stationid = stationid_for_ghcn_pull)
ghcn_data
# reshape the ghcn daily data input fields
ghcn_data = ghcnd_splitvars(x = ghcn_data)
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
df
runApp()
# Libraries
library(package = "tidyverse")
nCLIMDIV_Metadata = tibble(Variable  = c("tmax",
"tmin",
"tmpc",
"cddc",
"hddc",
"pcpn",
"pdsi",
"phdi",
"pmdi",
"sp01",
"sp02",
"sp03",
"sp06",
"sp09",
"sp12",
"sp24",
"zndx"),
param_code   = c(27,  #  "tmax"
28,  #  "tmin",
02,  #  "tmpc",
26,  #  "cddc",
25,  #  "hddc",
01,  #  "pcpn",
05,  #  "pdsi",
06,  #  "phdi",
08,  #  "pmdi",
71,  #  "sp01",
72,  #  "sp02",
73,  #  "sp03",
74,  #  "sp06",
75,  #  "sp09",
76,  #  "sp12",
77,  #  "sp24",
07),  #  "zndx"
long_name    = c("Maximum Monthly Temperature",  #  "tmax"
"Minimim Monthly Temperature",  #  "tmin",
"Mean Monthly Temperature",     #  "tmpc",
"Cooling Degree Days",          #  "cddc",
"Heating Degree Days",  #  "hddc",
"Monthly Total Precipitation",  #  "pcpn",
"Palmer Drought Severity Index",  #  "pdsi",
"Palmer Hydrological Drought Index",  #  "phdi",
"Modified Palmer Drought Severity Index",  #  "pmdi",
"Modified Palmer Drought Severity Index",  #  "sp01",
"2-mo Standardized Precipitation Index",  #  "sp02",
"3-mo Standardized Precipitation Index",  #  "sp03",
"6-mo Standardized Precipitation Index",  #  "sp06",
"9-mo Standardized Precipitation Index",  #  "sp09",
"12-mo Standardized Precipitation Index",  #  "sp12",
"24-mo Standardized Precipitation Index",  #  "sp24",
'Palmer "Z" Index'),  #  "zndx"
units        = c("deg C",  #  "tmax"
"deg C",  #  "tmin",
"deg C",  #  "tmpc",
NA,          #  "cddc",
NA,  #  "hddc",
"kg m-2",  #  "pcpn",
NA,  #  "pdsi",
NA,  #  "phdi",
NA,  #  "pmdi",
NA,  #  "sp01",
NA,  #  "sp02",
NA,  #  "sp03",
NA,  #  "sp06",
NA,  #  "sp09",
NA,  #  "sp12",
NA,  #  "sp24",
NA),  #  "zndx"
)
root_url = "ftp://ftp.ncdc.noaa.gov/pub/data/cirs/climdiv/"
version = "v1.0.0"
datecode = read_lines(file = url(description = "ftp://ftp.ncdc.noaa.gov/pub/data/cirs/climdiv/procdate.txt"))
nCLIMDIV_Metadata$nCLIMDIV_Version      = version
nCLIMDIV_Metadata$nCLIMDIV_Release_Date = as.Date(datecode, tryFormats = "%Y%m%d")
# read raw data into a single huge file
column_names = c("header",
"01",
"02",
"03",
"04",
"05",
"06",
"07",
"08",
"09",
"10",
"11",
"12",
"deleteme")
col_types    = "cnnnnnnnnnnnnl"
for (var in nCLIMDIV_Metadata$Variable) {
file_string = str_c("climdiv",
"-",
var,
"dv-",
version,
"-",
datecode,
sep = "")
url_string = str_c(root_url,
file_string,
sep = "")
print(url_string)
input_table = read_delim(file      = url(description = url_string),
delim     = " ",
col_names = column_names,
col_types = col_types)
input_table = input_table %>% select(-deleteme)
if (var == nCLIMDIV_Metadata$Variable[1]) {
nCLIMDIV = input_table
} else {
nCLIMDIV = rbind(nCLIMDIV,
input_table)
}
remove(input_table)
}
remove(col_types)
remove(column_names)
remove(url_string)
remove(root_url)
remove(file_string)
remove(datecode)
remove(version)
remove(var)
nCLIMDIV = gather(data  = nCLIMDIV,
key   = "month",
value = "Value",
'01',
'02',
'03',
'04',
'05',
'06',
'07',
'08',
'09',
'10',
'11',
'12')
nCLIMDIV$Full_Zone_Code = str_sub(string = nCLIMDIV$header,
start  =  1,
end    =  4)
nCLIMDIV$param_code     = str_sub(string = nCLIMDIV$header,
start  =  5,
end    =  6)
nCLIMDIV$param_code = as.numeric(nCLIMDIV$param_code)
nCLIMDIV$year           = str_sub(string = nCLIMDIV$header,
start  =  7,
end    = 10)
nCLIMDIV = left_join(x  = nCLIMDIV,
y  = nCLIMDIV_Metadata,
by = "param_code")
nCLIMDIV$Variable  = str_to_upper(string = nCLIMDIV$Variable,
locale = "en")
nCLIMDIV$Date = as.Date(str_c(nCLIMDIV$year,
"-",
nCLIMDIV$month,
"-15",
sep = ""))
nCLIMDIV = nCLIMDIV %>% select(Full_Zone_Code,
Date,
Variable,
Value)
nCLIMDIV = spread(data  = nCLIMDIV,
key   = Variable,
value = Value)
nCLIMDIV = nCLIMDIV %>% filter(CDDC >= 0)
nCLIMDIV = nCLIMDIV %>% mutate(SP01 = ifelse(SP01 < -99.9, NA, SP01),
SP02 = ifelse(SP02 < -99.9, NA, SP02),
SP03 = ifelse(SP03 < -99.9, NA, SP03),
SP06 = ifelse(SP06 < -99.9, NA, SP06),
SP09 = ifelse(SP09 < -99.9, NA, SP09),
SP12 = ifelse(SP12 < -99.9, NA, SP12),
SP24 = ifelse(SP24 < -99.9, NA, SP24))
nCLIMDIV$TMAX =   round((nCLIMDIV$TMAX - 32.0) * 5./9., digits = 2)
nCLIMDIV$TMIN =   round((nCLIMDIV$TMIN - 32.0) * 5./9., digits = 2)
nCLIMDIV$TMPC =   round((nCLIMDIV$TMPC - 32.0) * 5./9., digits = 2)
nCLIMDIV$PRCP =   round( nCLIMDIV$PCPN * 25.4,          digits = 3)
nCLIMDIV_Metadata$Variable = str_to_upper(string = nCLIMDIV_Metadata$Variable,
locale = "en")
nCLIMDIV_LUT = read_csv(file = "~/GitHub/NCDC_rnoaa_ISD/nCLIMDIV_LUT.csv")
nCLIMDIV = left_join(nCLIMDIV,
nCLIMDIV_LUT,
by = "Full_Zone_Code")
save(nCLIMDIV,nCLIMDIV_Metadata,
file = "~/GitHub/NCDC_rnoaa_ISD/nCLIMDIV.Rdata")
system(command = "scp ~/GitHub/NCDC_rnoaa_ISD/nCLIMDIV.Rdata  /projects/THREDDS/local_academic_repo/CLASS_Examples/")
system(command = "scp ~/GitHub/NCDC_rnoaa_ISD/nCLIMDIV.Rdata  /projects/THREDDS/local_academic_repo/CLASS_Examples/")
system(command = "scp ~/GitHub/NCDC_rnoaa_ISD/nCLIMDIV.Rdata  /projects/THREDDS/local_academic_repo/CLASS_Examples/")
system(command = "scp ~/GitHub/NCDC_rnoaa_ISD/nCLIMDIV.Rdata  /projects/THREDDS/local_academic_repo/CLASS_Examples/")
# Libraries
library(package = "tidyverse")
nCLIMDIV_Metadata = tibble(Variable  = c("tmax",
"tmin",
"tmpc",
"cddc",
"hddc",
"pcpn",
"pdsi",
"phdi",
"pmdi",
"sp01",
"sp02",
"sp03",
"sp06",
"sp09",
"sp12",
"sp24",
"zndx"),
param_code   = c(27,  #  "tmax"
28,  #  "tmin",
02,  #  "tmpc",
26,  #  "cddc",
25,  #  "hddc",
01,  #  "pcpn",
05,  #  "pdsi",
06,  #  "phdi",
08,  #  "pmdi",
71,  #  "sp01",
72,  #  "sp02",
73,  #  "sp03",
74,  #  "sp06",
75,  #  "sp09",
76,  #  "sp12",
77,  #  "sp24",
07),  #  "zndx"
long_name    = c("Maximum Monthly Temperature",  #  "tmax"
"Minimim Monthly Temperature",  #  "tmin",
"Mean Monthly Temperature",     #  "tmpc",
"Cooling Degree Days",          #  "cddc",
"Heating Degree Days",  #  "hddc",
"Monthly Total Precipitation",  #  "pcpn",
"Palmer Drought Severity Index",  #  "pdsi",
"Palmer Hydrological Drought Index",  #  "phdi",
"Modified Palmer Drought Severity Index",  #  "pmdi",
"Modified Palmer Drought Severity Index",  #  "sp01",
"2-mo Standardized Precipitation Index",  #  "sp02",
"3-mo Standardized Precipitation Index",  #  "sp03",
"6-mo Standardized Precipitation Index",  #  "sp06",
"9-mo Standardized Precipitation Index",  #  "sp09",
"12-mo Standardized Precipitation Index",  #  "sp12",
"24-mo Standardized Precipitation Index",  #  "sp24",
'Palmer "Z" Index'),  #  "zndx"
units        = c("deg C",  #  "tmax"
"deg C",  #  "tmin",
"deg C",  #  "tmpc",
NA,          #  "cddc",
NA,  #  "hddc",
"kg m-2",  #  "pcpn",
NA,  #  "pdsi",
NA,  #  "phdi",
NA,  #  "pmdi",
NA,  #  "sp01",
NA,  #  "sp02",
NA,  #  "sp03",
NA,  #  "sp06",
NA,  #  "sp09",
NA,  #  "sp12",
NA,  #  "sp24",
NA),  #  "zndx"
)
root_url = "ftp://ftp.ncdc.noaa.gov/pub/data/cirs/climdiv/"
version = "v1.0.0"
datecode = read_lines(file = url(description = "ftp://ftp.ncdc.noaa.gov/pub/data/cirs/climdiv/procdate.txt"))
nCLIMDIV_Metadata$nCLIMDIV_Version      = version
nCLIMDIV_Metadata$nCLIMDIV_Release_Date = as.Date(datecode, tryFormats = "%Y%m%d")
# read raw data into a single huge file
column_names = c("header",
"01",
"02",
"03",
"04",
"05",
"06",
"07",
"08",
"09",
"10",
"11",
"12",
"deleteme")
col_types    = "cnnnnnnnnnnnnl"
for (var in nCLIMDIV_Metadata$Variable) {
file_string = str_c("climdiv",
"-",
var,
"dv-",
version,
"-",
datecode,
sep = "")
url_string = str_c(root_url,
file_string,
sep = "")
print(url_string)
input_table = read_delim(file      = url(description = url_string),
delim     = " ",
col_names = column_names,
col_types = col_types)
input_table = input_table %>% select(-deleteme)
if (var == nCLIMDIV_Metadata$Variable[1]) {
nCLIMDIV = input_table
} else {
nCLIMDIV = rbind(nCLIMDIV,
input_table)
}
remove(input_table)
}
remove(col_types)
remove(column_names)
remove(url_string)
remove(root_url)
remove(file_string)
remove(datecode)
remove(version)
remove(var)
nCLIMDIV = gather(data  = nCLIMDIV,
key   = "month",
value = "Value",
'01',
'02',
'03',
'04',
'05',
'06',
'07',
'08',
'09',
'10',
'11',
'12')
nCLIMDIV$Full_Zone_Code = str_sub(string = nCLIMDIV$header,
start  =  1,
end    =  4)
nCLIMDIV$param_code     = str_sub(string = nCLIMDIV$header,
start  =  5,
end    =  6)
nCLIMDIV$param_code = as.numeric(nCLIMDIV$param_code)
nCLIMDIV$year           = str_sub(string = nCLIMDIV$header,
start  =  7,
end    = 10)
nCLIMDIV = left_join(x  = nCLIMDIV,
y  = nCLIMDIV_Metadata,
by = "param_code")
nCLIMDIV$Variable  = str_to_upper(string = nCLIMDIV$Variable,
locale = "en")
nCLIMDIV$Date = as.Date(str_c(nCLIMDIV$year,
"-",
nCLIMDIV$month,
"-15",
sep = ""))
nCLIMDIV = nCLIMDIV %>% select(Full_Zone_Code,
Date,
Variable,
Value)
nCLIMDIV = spread(data  = nCLIMDIV,
key   = Variable,
value = Value)
nCLIMDIV = nCLIMDIV %>% filter(CDDC >= 0)
nCLIMDIV = nCLIMDIV %>% mutate(SP01 = ifelse(SP01 < -99.9, NA, SP01),
SP02 = ifelse(SP02 < -99.9, NA, SP02),
SP03 = ifelse(SP03 < -99.9, NA, SP03),
SP06 = ifelse(SP06 < -99.9, NA, SP06),
SP09 = ifelse(SP09 < -99.9, NA, SP09),
SP12 = ifelse(SP12 < -99.9, NA, SP12),
SP24 = ifelse(SP24 < -99.9, NA, SP24))
nCLIMDIV$TMAX =   round((nCLIMDIV$TMAX - 32.0) * 5./9., digits = 2)
nCLIMDIV$TMIN =   round((nCLIMDIV$TMIN - 32.0) * 5./9., digits = 2)
nCLIMDIV$TMPC =   round((nCLIMDIV$TMPC - 32.0) * 5./9., digits = 2)
nCLIMDIV$PCPN =   round( nCLIMDIV$PCPN * 25.4,          digits = 3)
nCLIMDIV_Metadata$Variable = str_to_upper(string = nCLIMDIV_Metadata$Variable,
locale = "en")
nCLIMDIV_LUT = read_csv(file = "~/GitHub/NCDC_rnoaa_ISD/nCLIMDIV_LUT.csv")
nCLIMDIV = left_join(nCLIMDIV,
nCLIMDIV_LUT,
by = "Full_Zone_Code")
save(nCLIMDIV,nCLIMDIV_Metadata,
file = "~/GitHub/NCDC_rnoaa_ISD/nCLIMDIV.Rdata")
system(command = "scp ~/GitHub/NCDC_rnoaa_ISD/nCLIMDIV.Rdata  root@kyrill:/projects/THREDDS/local_academic_repo/CLASS_Examples/")
